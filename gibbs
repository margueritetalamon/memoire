rm(list = ls())


rmixtmod <- function(n,p,mu, sigma) {
  z <- sample(c(1:length(p)),n,replace = TRUE ,prob=p)
  return(data.frame(x=rnorm(n,mu[z],sqrt(sigma[z])),z=z))
}



melange <- gen3_mix(1000,c(0.3,0.7),c(0,2.5),c(1,1))


gibbs <- function(n_gibbs,x,K,gamma,s,l,eps,v,mu0,p0,sig0){
  p <- matrix(0,n_gibbs+1,K)
  mu <- matrix(0,n_gibbs+1,K)
  sig <- matrix(0,n_gibbs+1,K)
  p[1,]<- p0
  mu[1,] <- mu0
  sig[1,] <- sig0
  u <- matrix(0,K,length(x)) #matrice de proba
  like <- rep(0,n_gibbs+1)
  #like[1] <- loglikelihood_mm(x,p[1,],mu[1,],sig[1,])
  z <- rep(0,length(x))
  me <- c(0,0)
  ve <- c(0,0)
  var_b <- c(0,0)
  #moy <- matrix(0,n_gibbs+1,K)
  #vr <- matrix(0,n_gibbs+1,K)
  #nb <- matrix(0,n_gibbs+1,K)
  n <- matrix(0,n_gibbs+1,K)
  n[1,] <- p0*length(x)
  for (t in 1:n_gibbs){
    for (i in 1:length(x)){
      u[,i] <- p[t,]*dnorm(x[i],mu[t,],sqrt(sig[t,]))
      z[i] <- sample(1:K,size = 1,replace=TRUE,prob = u[,i])
    }
    n[as.numeric(levels(as.factor(z)))] <- table(z)
    p[t+1,] <- rdirichlet(1,gamma+n)
    for (j in 1:K){
      me[j] <- ((mean(x[z==j])*n[j])+(l[j]*eps[j]))/(l[j]+n[j])
      var_b[j] <- mean(x[z==j]^2)-mean(x[z==j])^2
      ve[j] <- s[j] + n[j]*var_b[j] + (l[j]*n[j]*(eps[j]-mean(x[z==j]))^2)/(n[j]+l[j])
      if (sum(z==j)==0){
         me <- eps[j]
         ve <- s[j]
      }
    mu[t+1,] <- rnorm(K,me,sqrt(sig[t,]/(n+l)))
    sig[t+1,] <- rinvgamma(K,(v+n)/2,ve/2)
    #like[t+1] <- loglikelihood_mm(x,p[t+1,],mu[t+1,],sig[t+1,])
    }
  }
  return(list(p=p,mu=mu,sig=sig,like=like))
  
}



K <- 2
gamma <- rep(1/(K+1),K)
s <- 2*rep(var(melange$x),K) #a definir
l <- rep(1,K) #a definir
eps <- rep(mean(melange$x),K) #a definir
v <- rep(20,K)
p0<- rep(1/K,K)
mu0 <- c(5,1.5)
sig0 <- rep(1,K)
n_gibbs <- 10000
test_ <-gibbs(n_gibbs,melange$x,K,gamma,s,l,eps,v,mu0,p0,sig0)



dmixtmod <- function(x,p,mu,sig){
  return(colSums(p*sapply(x,dnorm,mu,sqrt(sig))))
}


loglikelihood_mm <-function(x,p,mu,sigma){
  return(sum(log(sapply(x,dmixtmod,p,mu,sigma))))
}



dtest <- function(mu_1, mu_2, x){
  output <- 0
  for(i in 1:length(x)) {
    output <- output + log(.7*dnorm(x[i], mu_1) + 0.3*dnorm(x[i], mu_2)) #proprotions Ã  adapter
  }
  return(output)
}



mu_1 <- seq(-2.5, 4.5, .1)
mu_2 <- seq(-2.5, 4.5, .1)
like <- outer(mu_1, mu_2, dtest, x = melange$x)

image(mu_1,mu_2,like,xlab=expression(mu[1]), ylab=expression(mu[2]),col=heat.colors(250))
contour(mu_1,mu_2,like,levels=seq(min(like),max(like),100), add=TRUE,drawlabels=FALSE,legend='gibbs1')
points(test_$mu,pch=".")








bn <- 1000






melange <- rmixtmod(1000,c(0.3,0.7),c(0,2.5),c(1,1))

